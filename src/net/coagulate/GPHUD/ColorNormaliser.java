package net.coagulate.GPHUD;

import net.coagulate.GPHUD.Modules.Validators;

import javax.annotation.Nullable;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class ColorNormaliser {
	private ColorNormaliser() {}

	// ---------- STATICS ----------
	@Nullable
	public static String normalise(@Nullable final String value) {
		// meh
		if (value==null) { return null; }
		// if already a valid format, well thats nice, the user followed instructions :P
		if (Validators.color(value)) { return value; }
		// so they didn't.
		if (value.split(",").length==3) {
			// so they input some kind of triplet.  try parse this
			final String[] components=value.split(",");
			return reformatTriplets(components,false);
		}
		// the other thing we sometimes see is "HTML" format, or 6 hex chars, possibly with an initial #
		final String[] tripletformat=tripletise(value);
		if (tripletformat!=null) {
			return reformatTriplets(tripletformat,true);
		}
		// sometimes they just type in words
		final String decodedword=decodeColorName(value);
		if (decodedword!=null) { return decodedword; }
		// otherwise who knows.  just spit the input out so it can generate the inevitable "unparsable junk" exception
		return value;
	}

	// ----- Internal Statics -----
	@Nullable
	private static String decodeColorName(@Nullable final String name) {
		if (name==null) { return null; }
		/*
		generated by this unix blah from w3c's html color names
		wget https://www.w3schools.com/colors/colors_names.asp -O/dev/stdout -q|egrep "colornamespan|colorhexspan" colors_names.asp |cut -d"=" -f5-|cut -d'"' -f1|grep -v '^\.'|awk 'NR%2{printf "%s ",$0;next;}1'|sed 's/ /")) { return reformatTriplets(tripletise("/'|sed 's/^/if (name.equalsIgnoreCase("/'|sed 's/$/"),true); }/'
		*/
		if (name.equalsIgnoreCase("AliceBlue")) { return reformatTriplets(tripletise("F0F8FF"),true); }
		if (name.equalsIgnoreCase("AntiqueWhite")) { return reformatTriplets(tripletise("FAEBD7"),true); }
		if (name.equalsIgnoreCase("Aqua")) { return reformatTriplets(tripletise("00FFFF"),true); }
		if (name.equalsIgnoreCase("Aquamarine")) { return reformatTriplets(tripletise("7FFFD4"),true); }
		if (name.equalsIgnoreCase("Azure")) { return reformatTriplets(tripletise("F0FFFF"),true); }
		if (name.equalsIgnoreCase("Beige")) { return reformatTriplets(tripletise("F5F5DC"),true); }
		if (name.equalsIgnoreCase("Bisque")) { return reformatTriplets(tripletise("FFE4C4"),true); }
		if (name.equalsIgnoreCase("Black")) { return reformatTriplets(tripletise("000000"),true); }
		if (name.equalsIgnoreCase("BlanchedAlmond")) { return reformatTriplets(tripletise("FFEBCD"),true); }
		if (name.equalsIgnoreCase("Blue")) { return reformatTriplets(tripletise("0000FF"),true); }
		if (name.equalsIgnoreCase("BlueViolet")) { return reformatTriplets(tripletise("8A2BE2"),true); }
		if (name.equalsIgnoreCase("Brown")) { return reformatTriplets(tripletise("A52A2A"),true); }
		if (name.equalsIgnoreCase("BurlyWood")) { return reformatTriplets(tripletise("DEB887"),true); }
		if (name.equalsIgnoreCase("CadetBlue")) { return reformatTriplets(tripletise("5F9EA0"),true); }
		if (name.equalsIgnoreCase("Chartreuse")) { return reformatTriplets(tripletise("7FFF00"),true); }
		if (name.equalsIgnoreCase("Chocolate")) { return reformatTriplets(tripletise("D2691E"),true); }
		if (name.equalsIgnoreCase("Coral")) { return reformatTriplets(tripletise("FF7F50"),true); }
		if (name.equalsIgnoreCase("CornflowerBlue")) { return reformatTriplets(tripletise("6495ED"),true); }
		if (name.equalsIgnoreCase("Cornsilk")) { return reformatTriplets(tripletise("FFF8DC"),true); }
		if (name.equalsIgnoreCase("Crimson")) { return reformatTriplets(tripletise("DC143C"),true); }
		if (name.equalsIgnoreCase("Cyan")) { return reformatTriplets(tripletise("00FFFF"),true); }
		if (name.equalsIgnoreCase("DarkBlue")) { return reformatTriplets(tripletise("00008B"),true); }
		if (name.equalsIgnoreCase("DarkCyan")) { return reformatTriplets(tripletise("008B8B"),true); }
		if (name.equalsIgnoreCase("DarkGoldenRod")) { return reformatTriplets(tripletise("B8860B"),true); }
		if (name.equalsIgnoreCase("DarkGray")) { return reformatTriplets(tripletise("A9A9A9"),true); }
		if (name.equalsIgnoreCase("DarkGrey")) { return reformatTriplets(tripletise("A9A9A9"),true); }
		if (name.equalsIgnoreCase("DarkGreen")) { return reformatTriplets(tripletise("006400"),true); }
		if (name.equalsIgnoreCase("DarkKhaki")) { return reformatTriplets(tripletise("BDB76B"),true); }
		if (name.equalsIgnoreCase("DarkMagenta")) { return reformatTriplets(tripletise("8B008B"),true); }
		if (name.equalsIgnoreCase("DarkOliveGreen")) { return reformatTriplets(tripletise("556B2F"),true); }
		if (name.equalsIgnoreCase("DarkOrange")) { return reformatTriplets(tripletise("FF8C00"),true); }
		if (name.equalsIgnoreCase("DarkOrchid")) { return reformatTriplets(tripletise("9932CC"),true); }
		if (name.equalsIgnoreCase("DarkRed")) { return reformatTriplets(tripletise("8B0000"),true); }
		if (name.equalsIgnoreCase("DarkSalmon")) { return reformatTriplets(tripletise("E9967A"),true); }
		if (name.equalsIgnoreCase("DarkSeaGreen")) { return reformatTriplets(tripletise("8FBC8F"),true); }
		if (name.equalsIgnoreCase("DarkSlateBlue")) { return reformatTriplets(tripletise("483D8B"),true); }
		if (name.equalsIgnoreCase("DarkSlateGray")) { return reformatTriplets(tripletise("2F4F4F"),true); }
		if (name.equalsIgnoreCase("DarkSlateGrey")) { return reformatTriplets(tripletise("2F4F4F"),true); }
		if (name.equalsIgnoreCase("DarkTurquoise")) { return reformatTriplets(tripletise("00CED1"),true); }
		if (name.equalsIgnoreCase("DarkViolet")) { return reformatTriplets(tripletise("9400D3"),true); }
		if (name.equalsIgnoreCase("DeepPink")) { return reformatTriplets(tripletise("FF1493"),true); }
		if (name.equalsIgnoreCase("DeepSkyBlue")) { return reformatTriplets(tripletise("00BFFF"),true); }
		if (name.equalsIgnoreCase("DimGray")) { return reformatTriplets(tripletise("696969"),true); }
		if (name.equalsIgnoreCase("DimGrey")) { return reformatTriplets(tripletise("696969"),true); }
		if (name.equalsIgnoreCase("DodgerBlue")) { return reformatTriplets(tripletise("1E90FF"),true); }
		if (name.equalsIgnoreCase("FireBrick")) { return reformatTriplets(tripletise("B22222"),true); }
		if (name.equalsIgnoreCase("FloralWhite")) { return reformatTriplets(tripletise("FFFAF0"),true); }
		if (name.equalsIgnoreCase("ForestGreen")) { return reformatTriplets(tripletise("228B22"),true); }
		if (name.equalsIgnoreCase("Fuchsia")) { return reformatTriplets(tripletise("FF00FF"),true); }
		if (name.equalsIgnoreCase("Gainsboro")) { return reformatTriplets(tripletise("DCDCDC"),true); }
		if (name.equalsIgnoreCase("GhostWhite")) { return reformatTriplets(tripletise("F8F8FF"),true); }
		if (name.equalsIgnoreCase("Gold")) { return reformatTriplets(tripletise("FFD700"),true); }
		if (name.equalsIgnoreCase("GoldenRod")) { return reformatTriplets(tripletise("DAA520"),true); }
		if (name.equalsIgnoreCase("Gray")) { return reformatTriplets(tripletise("808080"),true); }
		if (name.equalsIgnoreCase("Grey")) { return reformatTriplets(tripletise("808080"),true); }
		if (name.equalsIgnoreCase("Green")) { return reformatTriplets(tripletise("008000"),true); }
		if (name.equalsIgnoreCase("GreenYellow")) { return reformatTriplets(tripletise("ADFF2F"),true); }
		if (name.equalsIgnoreCase("HoneyDew")) { return reformatTriplets(tripletise("F0FFF0"),true); }
		if (name.equalsIgnoreCase("HotPink")) { return reformatTriplets(tripletise("FF69B4"),true); }
		if (name.equalsIgnoreCase("IndianRed")) { return reformatTriplets(tripletise(" CD5C5C"),true); }
		if (name.equalsIgnoreCase("Indigo")) { return reformatTriplets(tripletise("  4B0082"),true); }
		if (name.equalsIgnoreCase("Ivory")) { return reformatTriplets(tripletise("FFFFF0"),true); }
		if (name.equalsIgnoreCase("Khaki")) { return reformatTriplets(tripletise("F0E68C"),true); }
		if (name.equalsIgnoreCase("Lavender")) { return reformatTriplets(tripletise("E6E6FA"),true); }
		if (name.equalsIgnoreCase("LavenderBlush")) { return reformatTriplets(tripletise("FFF0F5"),true); }
		if (name.equalsIgnoreCase("LawnGreen")) { return reformatTriplets(tripletise("7CFC00"),true); }
		if (name.equalsIgnoreCase("LemonChiffon")) { return reformatTriplets(tripletise("FFFACD"),true); }
		if (name.equalsIgnoreCase("LightBlue")) { return reformatTriplets(tripletise("ADD8E6"),true); }
		if (name.equalsIgnoreCase("LightCoral")) { return reformatTriplets(tripletise("F08080"),true); }
		if (name.equalsIgnoreCase("LightCyan")) { return reformatTriplets(tripletise("E0FFFF"),true); }
		if (name.equalsIgnoreCase("LightGoldenRodYellow")) { return reformatTriplets(tripletise("FAFAD2"),true); }
		if (name.equalsIgnoreCase("LightGray")) { return reformatTriplets(tripletise("D3D3D3"),true); }
		if (name.equalsIgnoreCase("LightGrey")) { return reformatTriplets(tripletise("D3D3D3"),true); }
		if (name.equalsIgnoreCase("LightGreen")) { return reformatTriplets(tripletise("90EE90"),true); }
		if (name.equalsIgnoreCase("LightPink")) { return reformatTriplets(tripletise("FFB6C1"),true); }
		if (name.equalsIgnoreCase("LightSalmon")) { return reformatTriplets(tripletise("FFA07A"),true); }
		if (name.equalsIgnoreCase("LightSeaGreen")) { return reformatTriplets(tripletise("20B2AA"),true); }
		if (name.equalsIgnoreCase("LightSkyBlue")) { return reformatTriplets(tripletise("87CEFA"),true); }
		if (name.equalsIgnoreCase("LightSlateGray")) { return reformatTriplets(tripletise("778899"),true); }
		if (name.equalsIgnoreCase("LightSlateGrey")) { return reformatTriplets(tripletise("778899"),true); }
		if (name.equalsIgnoreCase("LightSteelBlue")) { return reformatTriplets(tripletise("B0C4DE"),true); }
		if (name.equalsIgnoreCase("LightYellow")) { return reformatTriplets(tripletise("FFFFE0"),true); }
		if (name.equalsIgnoreCase("Lime")) { return reformatTriplets(tripletise("00FF00"),true); }
		if (name.equalsIgnoreCase("LimeGreen")) { return reformatTriplets(tripletise("32CD32"),true); }
		if (name.equalsIgnoreCase("Linen")) { return reformatTriplets(tripletise("FAF0E6"),true); }
		if (name.equalsIgnoreCase("Magenta")) { return reformatTriplets(tripletise("FF00FF"),true); }
		if (name.equalsIgnoreCase("Maroon")) { return reformatTriplets(tripletise("800000"),true); }
		if (name.equalsIgnoreCase("MediumAquaMarine")) { return reformatTriplets(tripletise("66CDAA"),true); }
		if (name.equalsIgnoreCase("MediumBlue")) { return reformatTriplets(tripletise("0000CD"),true); }
		if (name.equalsIgnoreCase("MediumOrchid")) { return reformatTriplets(tripletise("BA55D3"),true); }
		if (name.equalsIgnoreCase("MediumPurple")) { return reformatTriplets(tripletise("9370DB"),true); }
		if (name.equalsIgnoreCase("MediumSeaGreen")) { return reformatTriplets(tripletise("3CB371"),true); }
		if (name.equalsIgnoreCase("MediumSlateBlue")) { return reformatTriplets(tripletise("7B68EE"),true); }
		if (name.equalsIgnoreCase("MediumSpringGreen")) { return reformatTriplets(tripletise("00FA9A"),true); }
		if (name.equalsIgnoreCase("MediumTurquoise")) { return reformatTriplets(tripletise("48D1CC"),true); }
		if (name.equalsIgnoreCase("MediumVioletRed")) { return reformatTriplets(tripletise("C71585"),true); }
		if (name.equalsIgnoreCase("MidnightBlue")) { return reformatTriplets(tripletise("191970"),true); }
		if (name.equalsIgnoreCase("MintCream")) { return reformatTriplets(tripletise("F5FFFA"),true); }
		if (name.equalsIgnoreCase("MistyRose")) { return reformatTriplets(tripletise("FFE4E1"),true); }
		if (name.equalsIgnoreCase("Moccasin")) { return reformatTriplets(tripletise("FFE4B5"),true); }
		if (name.equalsIgnoreCase("NavajoWhite")) { return reformatTriplets(tripletise("FFDEAD"),true); }
		if (name.equalsIgnoreCase("Navy")) { return reformatTriplets(tripletise("000080"),true); }
		if (name.equalsIgnoreCase("OldLace")) { return reformatTriplets(tripletise("FDF5E6"),true); }
		if (name.equalsIgnoreCase("Olive")) { return reformatTriplets(tripletise("808000"),true); }
		if (name.equalsIgnoreCase("OliveDrab")) { return reformatTriplets(tripletise("6B8E23"),true); }
		if (name.equalsIgnoreCase("Orange")) { return reformatTriplets(tripletise("FFA500"),true); }
		if (name.equalsIgnoreCase("OrangeRed")) { return reformatTriplets(tripletise("FF4500"),true); }
		if (name.equalsIgnoreCase("Orchid")) { return reformatTriplets(tripletise("DA70D6"),true); }
		if (name.equalsIgnoreCase("PaleGoldenRod")) { return reformatTriplets(tripletise("EEE8AA"),true); }
		if (name.equalsIgnoreCase("PaleGreen")) { return reformatTriplets(tripletise("98FB98"),true); }
		if (name.equalsIgnoreCase("PaleTurquoise")) { return reformatTriplets(tripletise("AFEEEE"),true); }
		if (name.equalsIgnoreCase("PaleVioletRed")) { return reformatTriplets(tripletise("DB7093"),true); }
		if (name.equalsIgnoreCase("PapayaWhip")) { return reformatTriplets(tripletise("FFEFD5"),true); }
		if (name.equalsIgnoreCase("PeachPuff")) { return reformatTriplets(tripletise("FFDAB9"),true); }
		if (name.equalsIgnoreCase("Peru")) { return reformatTriplets(tripletise("CD853F"),true); }
		if (name.equalsIgnoreCase("Pink")) { return reformatTriplets(tripletise("FFC0CB"),true); }
		if (name.equalsIgnoreCase("Plum")) { return reformatTriplets(tripletise("DDA0DD"),true); }
		if (name.equalsIgnoreCase("PowderBlue")) { return reformatTriplets(tripletise("B0E0E6"),true); }
		if (name.equalsIgnoreCase("Purple")) { return reformatTriplets(tripletise("800080"),true); }
		if (name.equalsIgnoreCase("RebeccaPurple")) { return reformatTriplets(tripletise("663399"),true); }
		if (name.equalsIgnoreCase("Red")) { return reformatTriplets(tripletise("FF0000"),true); }
		if (name.equalsIgnoreCase("RosyBrown")) { return reformatTriplets(tripletise("BC8F8F"),true); }
		if (name.equalsIgnoreCase("RoyalBlue")) { return reformatTriplets(tripletise("4169E1"),true); }
		if (name.equalsIgnoreCase("SaddleBrown")) { return reformatTriplets(tripletise("8B4513"),true); }
		if (name.equalsIgnoreCase("Salmon")) { return reformatTriplets(tripletise("FA8072"),true); }
		if (name.equalsIgnoreCase("SandyBrown")) { return reformatTriplets(tripletise("F4A460"),true); }
		if (name.equalsIgnoreCase("SeaGreen")) { return reformatTriplets(tripletise("2E8B57"),true); }
		if (name.equalsIgnoreCase("SeaShell")) { return reformatTriplets(tripletise("FFF5EE"),true); }
		if (name.equalsIgnoreCase("Sienna")) { return reformatTriplets(tripletise("A0522D"),true); }
		if (name.equalsIgnoreCase("Silver")) { return reformatTriplets(tripletise("C0C0C0"),true); }
		if (name.equalsIgnoreCase("SkyBlue")) { return reformatTriplets(tripletise("87CEEB"),true); }
		if (name.equalsIgnoreCase("SlateBlue")) { return reformatTriplets(tripletise("6A5ACD"),true); }
		if (name.equalsIgnoreCase("SlateGray")) { return reformatTriplets(tripletise("708090"),true); }
		if (name.equalsIgnoreCase("SlateGrey")) { return reformatTriplets(tripletise("708090"),true); }
		if (name.equalsIgnoreCase("Snow")) { return reformatTriplets(tripletise("FFFAFA"),true); }
		if (name.equalsIgnoreCase("SpringGreen")) { return reformatTriplets(tripletise("00FF7F"),true); }
		if (name.equalsIgnoreCase("SteelBlue")) { return reformatTriplets(tripletise("4682B4"),true); }
		if (name.equalsIgnoreCase("Tan")) { return reformatTriplets(tripletise("D2B48C"),true); }
		if (name.equalsIgnoreCase("Teal")) { return reformatTriplets(tripletise("008080"),true); }
		if (name.equalsIgnoreCase("Thistle")) { return reformatTriplets(tripletise("D8BFD8"),true); }
		if (name.equalsIgnoreCase("Tomato")) { return reformatTriplets(tripletise("FF6347"),true); }
		if (name.equalsIgnoreCase("Turquoise")) { return reformatTriplets(tripletise("40E0D0"),true); }
		if (name.equalsIgnoreCase("Violet")) { return reformatTriplets(tripletise("EE82EE"),true); }
		if (name.equalsIgnoreCase("Wheat")) { return reformatTriplets(tripletise("F5DEB3"),true); }
		if (name.equalsIgnoreCase("White")) { return reformatTriplets(tripletise("FFFFFF"),true); }
		if (name.equalsIgnoreCase("WhiteSmoke")) { return reformatTriplets(tripletise("F5F5F5"),true); }
		if (name.equalsIgnoreCase("Yellow")) { return reformatTriplets(tripletise("FFFF00"),true); }
		if (name.equalsIgnoreCase("YellowGreen")) { return reformatTriplets(tripletise("9ACD32"),true); }
		return null;
	}

	@Nullable
	private static String[] tripletise(@Nullable final String hexstring) {
		// fairly straight forward internal use only blah blah
		if (hexstring==null) { return null; }
		final Matcher tripletise=Pattern.compile("#?([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])([0-9a-fA-F][0-9a-fA-F])").matcher(hexstring);
		if (!tripletise.matches()) { return null; } // really shouldn't be a thing
		final String[] triplet=new String[3];
		triplet[0]=tripletise.group(1);
		triplet[1]=tripletise.group(2);
		triplet[2]=tripletise.group(3);
		return triplet;
	}

	@Nullable
	private static String reformatTriplets(@Nullable final String[] component,
	                                       boolean knownhex) {
		if (component==null || component[0]==null || component[1]==null || component[2]==null) { return null; }
		// the fun part.
		component[0]=cleanseValue(component[0]);
		component[1]=cleanseValue(component[1]);
		component[2]=cleanseValue(component[2]);
		// is it a hex thing?  we may already know this but just in case
		if (!knownhex) {
			final Pattern hexchar=Pattern.compile("[A-Fa-f]+");
			if (hexchar.matcher(component[0]).matches() || hexchar.matcher(component[1]).matches() || hexchar.matcher(component[2]).matches()) { knownhex=true; }
		}
		// okay then, it's hex
		if (knownhex) { return hexToFloat(component); }
		// at this point there's the 0-255 and 0-1 possibilities.  if the user did 0-1 and everything else in the code works, they shouldn't get here
		// so lets assume its a typical 24 bit int thing
		return intToFloat(component);
	}

	private static String intToFloat(final String[] component) {
		// fine, 3 integers 0-255 to turn into fun with floats
		try {
			final float r=((float) Integer.parseInt(component[0]))/255.0f;
			final float g=((float) Integer.parseInt(component[1]))/255.0f;
			final float b=((float) Integer.parseInt(component[2]))/255.0f;
			// and so
			return "<"+r+","+g+","+b+">";
		}
		catch (final NumberFormatException ignored) {}
		return null;
	}

	private static String hexToFloat(final String[] component) {
		// sort of cheating, sort of reusing code :P
		try {
			component[0]=String.valueOf(Integer.parseInt(component[0],16));
			component[1]=String.valueOf(Integer.parseInt(component[1],16));
			component[2]=String.valueOf(Integer.parseInt(component[2],16));
			return intToFloat(component);
		}
		catch (final NumberFormatException ignored) {}
		return null;
	}

	private static String cleanseValue(final String v) {
		// remove anything that isn't a number, hex digit or decimal point
		return v.replaceAll("[^A-Fa-f0-9\\.]","");
	}
}

